#!/usr/bin/env python
from __future__ import print_function
import sys
import rospy
import cv2
import os
from std_msgs.msg import String
from sensor_msgs.msg import Image
from cv_bridge import CvBridge, CvBridgeError

i=1

class TakePhoto:
  
  def __init__(self):

      self.bridge = CvBridge()
      self.image_received = False

        # Connect image topic
      img_topic = "/camera/depth/image_raw"
      self.image_sub = rospy.Subscriber(img_topic, Image, self.callback)

        # Allow up to one second to connection
      rospy.sleep(1)
       
  def callback(self, data):
        # Convert image to OpenCV format
      try:
          cv_image = self.bridge.imgmsg_to_cv2(data,'passthrough')
      except CvBridgeError as e:
          print(e)

      self.image_received = True
      self.image = cv_image

  def take_picture(self, img_title):
      global i
      if self.image_received:
          # Save an image====
          cv2.imwrite(img_title, self.image*255)
          i += 1
          return True
      else:
          return False

if __name__ == '__main__':
  # Initialize
  rospy.init_node('TakePhoto', anonymous = True)
  camera = TakePhoto()  
  img_title = rospy.get_param("~img_title", "depth_photo"+str(i)+".png")

  if camera.take_picture(img_title):
    rospy.loginfo("Saved image " + img_title)
  else:
    rospy.loginfo("No images received")

  rate = rospy.Rate(10)
  rate.sleep()
